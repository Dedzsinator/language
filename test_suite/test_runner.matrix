-- Matrix Language Comprehensive Test Suite Runner
-- This file orchestrates all tests and provides unified reporting

struct TestResult {
    name: String,
    expected: String,
    actual: String,
    passed: Bool
}

struct TestSuite {
    name: String,
    results: [TestResult],
    total_tests: Int,
    passed_tests: Int
}

-- Main test runner function
let run_all_tests = {
    let all_suites = []

    -- Basic functionality tests
    let basic_suite = run_basic_tests()
    let math_suite = run_math_tests()
    let string_suite = run_string_tests()
    let array_suite = run_array_tests()
    let physics_suite = run_physics_tests()
    let quantum_suite = run_quantum_tests()

    -- Collect all suites
    let all_suites = [basic_suite, math_suite, string_suite, array_suite, physics_suite, quantum_suite]

    -- Generate summary report
    let generate_report = generate_test_report(all_suites)

    generate_report
}

-- Test validation helper
let assert_equal = |expected, actual, test_name| {
    let expected_str = str(expected)
    let actual_str = str(actual)
    let passed = expected_str == actual_str

    let result = TestResult {
        name: test_name,
        expected: expected_str,
        actual: actual_str,
        passed: passed
    }

    if passed {
        println("✓ " + test_name + " PASSED")
    } else {
        println("✗ " + test_name + " FAILED - Expected: " + expected_str + ", Got: " + actual_str)
    }

    result
}

-- Report generator
let generate_test_report = |suites| {
    println("=" * 60)
    println("MATRIX LANGUAGE TEST SUITE REPORT")
    println("=" * 60)

    let total_tests = 0
    let total_passed = 0

    for suite in suites {
        println("")
        println("Suite: " + suite.name)
        println("-" * 40)
        println("Tests: " + str(suite.total_tests) + " | Passed: " + str(suite.passed_tests) + " | Failed: " + str(suite.total_tests - suite.passed_tests))

        let total_tests = total_tests + suite.total_tests
        let total_passed = total_passed + suite.passed_tests
    }

    println("")
    println("=" * 60)
    println("OVERALL RESULTS:")
    println("Total Tests: " + str(total_tests))
    println("Passed: " + str(total_passed))
    println("Failed: " + str(total_tests - total_passed))

    let success_rate = (total_passed * 100) / total_tests
    println("Success Rate: " + str(success_rate) + "%")
    println("=" * 60)

    if total_passed == total_tests {
        println("🎉 ALL TESTS PASSED!")
    } else {
        println("❌ SOME TESTS FAILED")
    }
}

-- Execute the test suite
let test_execution = run_all_tests()
