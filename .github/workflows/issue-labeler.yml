name: Issue Auto-Labeler

on:
  issues:
    types: [opened, reopened]

jobs:
  auto-label:
    runs-on: ubuntu-latest
    steps:
      - name: Label bug reports
        if: contains(github.event.issue.title, '[BUG]') || contains(github.event.issue.title, 'bug')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['bug', 'needs-triage']
            })

      - name: Label feature requests
        if: contains(github.event.issue.title, '[FEATURE]') || contains(github.event.issue.title, 'feature')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['enhancement', 'needs-discussion']
            })

      - name: Label documentation issues
        if: contains(github.event.issue.title, '[DOCS]') || contains(github.event.issue.title, 'documentation')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['documentation', 'good-first-issue']
            })

      - name: Label performance issues
        if: contains(github.event.issue.title, '[PERFORMANCE]') || contains(github.event.issue.title, 'performance')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['performance', 'needs-investigation']
            })

      - name: Label first-time contributors
        uses: actions/github-script@v7
        with:
          script: |
            const { data: user } = await github.rest.users.getByUsername({
              username: context.payload.issue.user.login
            });

            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              creator: context.payload.issue.user.login,
              state: 'all'
            });

            if (issues.length === 1) {
              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ['first-time-contributor']
              });

              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `ðŸ‘‹ Welcome to Matrix Language! Thank you for your first contribution. A maintainer will review your issue soon.

If you're looking to contribute code, please check out our [Contributing Guide](CONTRIBUTING.md) and look for issues labeled \`good-first-issue\`.`
              });
            }
