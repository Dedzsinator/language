-- Game Physics Example
-- Demonstrates structs, functions, and matrix operations

struct Vector3 {
    x: Float,
    y: Float,
    z: Float
}

struct Transform {
    position: Vector3,
    rotation: Vector3,
    scale: Vector3
}

struct GameObject {
    name: String,
    transform: Transform,
    velocity: Vector3,
    mass: Float
}

-- Helper functions
let create_vector = (x: Float, y: Float, z: Float) => Vector3 { x: x, y: y, z: z }
let zero_vector = create_vector(0.0, 0.0, 0.0)
let up_vector = create_vector(0.0, 1.0, 0.0)

-- Create a game object
let player = GameObject {
    name: "Player",
    transform: Transform {
        position: create_vector(0.0, 0.0, 0.0),
        rotation: zero_vector,
        scale: create_vector(1.0, 1.0, 1.0)
    },
    velocity: create_vector(5.0, 0.0, 0.0),
    mass: 1.0
}

-- Transformation matrix (4x4 identity matrix)
let identity_matrix = [
    [1.0, 0.0, 0.0, 0.0],
    [0.0, 1.0, 0.0, 0.0],
    [0.0, 0.0, 1.0, 0.0],
    [0.0, 0.0, 0.0, 1.0]
]

let final_result = player
